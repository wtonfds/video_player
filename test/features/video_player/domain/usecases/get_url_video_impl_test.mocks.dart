// Mocks generated by Mockito 5.1.0 from annotations
// in seventh_player/test/features/video_player/domain/usecases/get_url_video_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:dartz/dartz.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:seventh_player/cores/errors.dart' as _i5;
import 'package:seventh_player/features/video_player/domain/entities/video_play_entity.dart'
    as _i6;
import 'package:seventh_player/features/video_player/domain/repositories/video_player_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [VideoPlayerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoPlayerRepository extends _i1.Mock
    implements _i2.VideoPlayerRepository {
  MockVideoPlayerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.ErrorVideo, _i6.VideoPlayEntity>?> videoPlayer() =>
      (super.noSuchMethod(Invocation.method(#videoPlayer, []),
              returnValue: Future<
                  _i4.Either<_i5.ErrorVideo, _i6.VideoPlayEntity>?>.value())
          as _i3.Future<_i4.Either<_i5.ErrorVideo, _i6.VideoPlayEntity>?>);
}
